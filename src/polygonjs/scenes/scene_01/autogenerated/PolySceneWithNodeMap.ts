import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { AudioListenerObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/AudioListener";
import { CopNetworkObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/CopNetwork";
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
import { HemisphereLightObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/HemisphereLight";
import { OrthographicCameraObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/OrthographicCamera";
import { PerspectiveCameraObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/PerspectiveCamera";
import { PositionalAudioObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/PositionalAudio";
// sop
import { ActorSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Actor";
import { AttribCopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribCopy";
import { AttribCreateSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribCreate";
import { AttribDeleteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribDelete";
import { AttribPromoteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribPromote";
import { AttribRenameSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribRename";
import { AudioNotesSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AudioNotes";
import { BoxSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Box";
import { CircleSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Circle";
import { CopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy";
import { DeleteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Delete";
import { EventsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EventsNetwork";
import { FuseSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Fuse";
import { HexagonsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Hexagons";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { NoiseSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Noise";
import { PaletteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Palette";
import { PlaneHelperSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PlaneHelper";
import { PlaneSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Plane";
import { PointSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Point";
import { RaySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Ray";
import { RestAttributesSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/RestAttributes";
import { ScatterSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Scatter";
import { SortSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Sort";
import { SphereSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Sphere";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
import { TubeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Tube";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";
// mat
import { LineBasicMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/LineBasic";
import { MeshLambertBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshLambertBuilder";
import { MeshStandardMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandard";
// cop
import { EnvMapCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/EnvMap";
import { ImageEXRCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/ImageEXR";
// actor
import { ClampActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/Clamp";
import { ConstantActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/Constant";
import { FloatToVec3ActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/FloatToVec3";
import { GetObjectAttributeActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/GetObjectAttribute";
import { GetObjectPropertyActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/GetObjectProperty";
import { MixActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/Mix";
import { OnObjectHoverActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/OnObjectHover";
import { OnTickActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/OnTick";
import { PlayInstrumentNoteActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/PlayInstrumentNote";
import { SetObjectPositionActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/SetObjectPosition";
import { SetObjectScaleActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/SetObjectScale";
import { SubtractActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/Subtract";
import { SwitchActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/Switch";
import { TriggerTwoWaySwitchActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/TriggerTwoWaySwitch";
import { TwoWaySwitchActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/TwoWaySwitch";
import { Vec3ToFloatActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/Vec3ToFloat";
// audio
import { AMSynthAudioNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/audio/AMSynth";
import { DistortionAudioNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/audio/Distortion";
import { EnvelopeAudioNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/audio/Envelope";
import { NullAudioNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/audio/Null";
import { PhaserAudioNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/audio/Phaser";
import { PlayInstrumentAudioNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/audio/PlayInstrument";
import { ReverbAudioNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/audio/Reverb";
import { SamplerAudioNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/audio/Sampler";
import { SwitchAudioNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/audio/Switch";

export class PolySceneWithNodeMap_scene_01 extends PolyScene {
  node(path: "/hemisphereLight1"): HemisphereLightObjNode;
  node(path: "/audioListener1"): AudioListenerObjNode;
  node(path: "/perspectiveCamera1"): PerspectiveCameraObjNode;
  node(path: "/perspectiveCamera1/events1"): EventsNetworkSopNode;
  node(
    path: "/perspectiveCamera1/events1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/geo2"): GeoObjNode;
  node(path: "/geo2/box1"): BoxSopNode;
  node(path: "/geo2/sphere1"): SphereSopNode;
  node(path: "/geo2/material1"): MaterialSopNode;
  node(path: "/geo2/MAT"): MaterialsNetworkSopNode;
  node(path: "/geo2/MAT/meshStandard1"): MeshStandardMatNode;
  node(path: "/COP"): CopNetworkObjNode;
  node(path: "/COP/imageEXR1"): ImageEXRCopNode;
  node(path: "/COP/envMap1"): EnvMapCopNode;
  node(path: "/hexa_grid"): GeoObjNode;
  node(path: "/hexa_grid/hexagons1"): HexagonsSopNode;
  node(path: "/hexa_grid/circle1"): CircleSopNode;
  node(path: "/hexa_grid/copy1"): CopySopNode;
  node(path: "/hexa_grid/transform1"): TransformSopNode;
  node(path: "/hexa_grid/circle2"): CircleSopNode;
  node(path: "/hexa_grid/transform2"): TransformSopNode;
  node(path: "/hexa_grid/ray1"): RaySopNode;
  node(path: "/hexa_grid/delete2"): DeleteSopNode;
  node(path: "/hexa_grid/material1"): MaterialSopNode;
  node(path: "/hexa_grid/merge1"): MergeSopNode;
  node(path: "/hexa_grid/tube1"): TubeSopNode;
  node(path: "/hexa_grid/copy2"): CopySopNode;
  node(path: "/hexa_grid/MAT"): MaterialsNetworkSopNode;
  node(path: "/hexa_grid/MAT/meshStandard1"): MeshStandardMatNode;
  node(path: "/hexa_grid/MAT/lineBasic1"): LineBasicMatNode;
  node(path: "/grid"): GeoObjNode;
  node(path: "/grid/planeHelper1"): PlaneHelperSopNode;
  node(path: "/orthographicCamera1"): OrthographicCameraObjNode;
  node(path: "/orthographicCamera1/eventsNetwork1"): EventsNetworkSopNode;
  node(
    path: "/orthographicCamera1/eventsNetwork1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/cubes"): GeoObjNode;
  node(path: "/cubes/attribCreate1"): AttribCreateSopNode;
  node(path: "/cubes/attribDelete1"): AttribDeleteSopNode;
  node(path: "/cubes/attribPromote1"): AttribPromoteSopNode;
  node(path: "/cubes/attribRename1"): AttribRenameSopNode;
  node(path: "/cubes/box1"): BoxSopNode;
  node(path: "/cubes/copy1"): CopySopNode;
  node(path: "/cubes/delete1"): DeleteSopNode;
  node(path: "/cubes/fuse1"): FuseSopNode;
  node(path: "/cubes/material1"): MaterialSopNode;
  node(path: "/cubes/merge1"): MergeSopNode;
  node(path: "/cubes/palette1"): PaletteSopNode;
  node(path: "/cubes/plane1"): PlaneSopNode;
  node(path: "/cubes/point1"): PointSopNode;
  node(path: "/cubes/restAttributes1"): RestAttributesSopNode;
  node(path: "/cubes/scatter1"): ScatterSopNode;
  node(path: "/cubes/transform1"): TransformSopNode;
  node(path: "/cubes/sort1"): SortSopNode;
  node(path: "/cubes/audioNotes1"): AudioNotesSopNode;
  node(path: "/cubes/noise1"): NoiseSopNode;
  node(path: "/cubes/attribCreate2"): AttribCreateSopNode;
  node(path: "/cubes/attribCopy1"): AttribCopySopNode;
  node(path: "/cubes/audioNotes2"): AudioNotesSopNode;
  node(path: "/cubes/MAT"): MaterialsNetworkSopNode;
  node(path: "/cubes/MAT/meshLambertBuilder1"): MeshLambertBuilderMatNode;
  node(path: "/cubes/actor1"): ActorSopNode;
  node(path: "/cubes/actor1/onTick1"): OnTickActorNode;
  node(path: "/cubes/actor1/onObjectHover1"): OnObjectHoverActorNode;
  node(path: "/cubes/actor1/twoWaySwitch1"): TwoWaySwitchActorNode;
  node(path: "/cubes/actor1/setObjectScale1"): SetObjectScaleActorNode;
  node(path: "/cubes/actor1/floatToVec3_1"): FloatToVec3ActorNode;
  node(path: "/cubes/actor1/playInstrumentNote1"): PlayInstrumentNoteActorNode;
  node(
    path: "/cubes/actor1/triggerTwoWaySwitch1"
  ): TriggerTwoWaySwitchActorNode;
  node(path: "/cubes/actor1/getObjectAttribute1"): GetObjectAttributeActorNode;
  node(path: "/cubes/actor1/constant_posBlend"): ConstantActorNode;
  node(path: "/cubes/actor1/mix1"): MixActorNode;
  node(path: "/cubes/actor1/getObjectAttribute2"): GetObjectAttributeActorNode;
  node(path: "/cubes/actor1/setObjectPosition1"): SetObjectPositionActorNode;
  node(path: "/cubes/actor1/floatToVec3_2"): FloatToVec3ActorNode;
  node(path: "/cubes/actor1/getObjectProperty1"): GetObjectPropertyActorNode;
  node(path: "/cubes/actor1/vec3ToFloat1"): Vec3ToFloatActorNode;
  node(path: "/cubes/actor1/getObjectAttribute3"): GetObjectAttributeActorNode;
  node(path: "/cubes/actor1/subtract1"): SubtractActorNode;
  node(path: "/cubes/actor1/clamp1"): ClampActorNode;
  node(path: "/cubes/actor1/getObjectAttribute4"): GetObjectAttributeActorNode;
  node(path: "/cubes/actor1/switch1"): SwitchActorNode;
  node(path: "/positionalAudio1"): PositionalAudioObjNode;
  node(path: "/positionalAudio1/envelope1"): EnvelopeAudioNode;
  node(path: "/positionalAudio1/AMSynth1"): AMSynthAudioNode;
  node(path: "/positionalAudio1/playInstrument1"): PlayInstrumentAudioNode;
  node(path: "/positionalAudio1/OUT"): NullAudioNode;
  node(path: "/positionalAudio1/sampler1"): SamplerAudioNode;
  node(path: "/positionalAudio1/envelope2"): EnvelopeAudioNode;
  node(path: "/positionalAudio1/reverb1"): ReverbAudioNode;
  node(path: "/positionalAudio1/distortion1"): DistortionAudioNode;
  node(path: "/positionalAudio1/phaser1"): PhaserAudioNode;
  node(path: "/positionalAudio1/switch_filterSound"): SwitchAudioNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_scene_01 {
  "hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "audioListener1--transform"?: ParamValueSerializedTypeMap["folder"];
  "audioListener1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "audioListener1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "audioListener1--t"?: ParamValueSerializedTypeMap["vector3"];
  "audioListener1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--tx"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--ty"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--tz"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--r"?: ParamValueSerializedTypeMap["vector3"];
  "audioListener1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--rx"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--ry"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--rz"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--s"?: ParamValueSerializedTypeMap["vector3"];
  "audioListener1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--sx"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--sy"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--sz"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--scale"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "audioListener1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "audioListener1--audio"?: ParamValueSerializedTypeMap["folder"];
  "audioListener1--soundOn"?: ParamValueSerializedTypeMap["boolean"];
  "audioListener1--masterVolume"?: ParamValueSerializedTypeMap["float"];
  "audioListener1--listenerTransformAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--transform"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--t"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--tx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--ty"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--tz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--rx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--ry"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--rz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--scale"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "perspectiveCamera1--camera"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--controls"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--updateFromControlsMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--display"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--fov"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--frameMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--expectedAspectRatio"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "perspectiveCamera1--layer"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--render"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--setScene"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--scene"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--setRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--renderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--setCSSRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--CSSRenderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--doPostProcess"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--postProcessNode"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1-events1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--enableKeys"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysPanSpeed"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysRotateSpeedVertical"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysRotateSpeedHorizontal"?: ParamValueSerializedTypeMap["float"];
  "geo2--transform"?: ParamValueSerializedTypeMap["folder"];
  "geo2--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "geo2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo2--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo2--tx"?: ParamValueSerializedTypeMap["float"];
  "geo2--ty"?: ParamValueSerializedTypeMap["float"];
  "geo2--tz"?: ParamValueSerializedTypeMap["float"];
  "geo2--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo2--rx"?: ParamValueSerializedTypeMap["float"];
  "geo2--ry"?: ParamValueSerializedTypeMap["float"];
  "geo2--rz"?: ParamValueSerializedTypeMap["float"];
  "geo2--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo2--sx"?: ParamValueSerializedTypeMap["float"];
  "geo2--sy"?: ParamValueSerializedTypeMap["float"];
  "geo2--sz"?: ParamValueSerializedTypeMap["float"];
  "geo2--scale"?: ParamValueSerializedTypeMap["float"];
  "geo2--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo2--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "geo2--display"?: ParamValueSerializedTypeMap["boolean"];
  "geo2--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo2-box1--size"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "geo2-box1--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--divisions"?: ParamValueSerializedTypeMap["integer"];
  "geo2-box1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo2-box1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo2-box1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "geo2-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "geo2-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "geo2-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo2-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo2-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-material1--group"?: ParamValueSerializedTypeMap["string"];
  "geo2-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-material1--applyToChildren"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo2-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo2-MAT-meshStandard1--default"?: ParamValueSerializedTypeMap["folder"];
  "geo2-MAT-meshStandard1--color"?: ParamValueSerializedTypeMap["color"];
  "geo2-MAT-meshStandard1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo2-MAT-meshStandard1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo2-MAT-meshStandard1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo2-MAT-meshStandard1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo2-MAT-meshStandard1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo2-MAT-meshStandard1--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo2-MAT-meshStandard1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo2-MAT-meshStandard1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo2-MAT-meshStandard1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo2-MAT-meshStandard1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo2-MAT-meshStandard1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo2-MAT-meshStandard1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "geo2-MAT-meshStandard1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "geo2-MAT-meshStandard1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--url"?: ParamValueSerializedTypeMap["string"];
  "COP-imageEXR1--reload"?: ParamValueSerializedTypeMap["button"];
  "COP-imageEXR1--tencoding"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--encoding"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--tmapping"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--mapping"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--twrap"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--wrapS"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--wrapT"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--tminFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--minFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--tmagFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--magFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--tanisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--useRendererMaxAnisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--anisotropy"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--tflipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--flipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--ttransform"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--offset"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEXR1--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--repeat"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEXR1--repeat-repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--repeat-repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--rotation"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--center"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEXR1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--centery"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--tformat"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--format"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--ttype"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--type"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--checkFileType"?: ParamValueSerializedTypeMap["boolean"];
  "COP-envMap1--useCameraRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid--transform"?: ParamValueSerializedTypeMap["folder"];
  "hexa_grid--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid--t"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid--t-tx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--t-ty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--t-tz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--tx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--ty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--tz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--r"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid--r-rx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--r-ry"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--r-rz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--rx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--ry"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--rz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--s"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid--s-sx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--s-sy"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--s-sz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--sx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--sy"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--sz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--scale"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "hexa_grid--display"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-hexagons1--size"?: ParamValueSerializedTypeMap["vector2"];
  "hexa_grid-hexagons1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--sizex"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--sizey"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--hexagonRadius"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-hexagons1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--directionx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--directiony"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--directionz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-hexagons1--pointsOnly"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-circle1--radius"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--segments"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-circle1--open"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-circle1--connectLastPoint"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-circle1--arcAngle"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-circle1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--directionx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--directiony"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--directionz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--center"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-circle1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--centerx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--centery"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle1--centerz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--count"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-copy1--t"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-copy1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--tx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--ty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--tz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--r"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-copy1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--rx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--ry"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--rz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--s"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-copy1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--sx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--sy"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--sz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--scale"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy1--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-copy1--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-copy1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-copy1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-copy1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "hexa_grid-copy1--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "hexa_grid-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--radius"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--segments"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-circle2--open"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-circle2--connectLastPoint"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-circle2--arcAngle"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--direction"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-circle2--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--directionx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--directiony"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--directionz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--center"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-circle2--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--center-centery"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--centerx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--centery"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-circle2--centerz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-transform2--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-transform2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-transform2--group"?: ParamValueSerializedTypeMap["string"];
  "hexa_grid-transform2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-transform2--t"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-transform2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--tx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--ty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--tz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--r"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-transform2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--rx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--ry"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--rz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--s"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-transform2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--sx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--sy"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--sz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--scale"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-transform2--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--pivotx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--pivoty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-transform2--pivotz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-ray1--mode"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-ray1--useNormals"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-ray1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-ray1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-ray1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-ray1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-ray1--directionx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-ray1--directiony"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-ray1--directionz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-ray1--transformPoints"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-ray1--transferFaceNormals"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-ray1--addDistAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-delete2--class"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-delete2--invert"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-delete2--byObjectType"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-delete2--objectType"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-delete2--byExpression"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-delete2--expression"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-delete2--byAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-delete2--attribType"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-delete2--attribName"?: ParamValueSerializedTypeMap["string"];
  "hexa_grid-delete2--attribSize"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-delete2--attribComparisonOperator"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-delete2--attribValue1"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue2"?: ParamValueSerializedTypeMap["vector2"];
  "hexa_grid-delete2--attribValue2-attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue2-attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue3"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-delete2--attribValue3-attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue3-attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue3-attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue4"?: ParamValueSerializedTypeMap["vector4"];
  "hexa_grid-delete2--attribValue4-attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue4-attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue4-attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue4-attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--attribString"?: ParamValueSerializedTypeMap["string"];
  "hexa_grid-delete2--byBbox"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-delete2--bboxSize"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-delete2--bboxSize-bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxSize-bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxSize-bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxCenter"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-delete2--bboxCenter-bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxCenter-bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxCenter-bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-delete2--byBoundingObject"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-delete2--keepPoints"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-material1--group"?: ParamValueSerializedTypeMap["string"];
  "hexa_grid-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-material1--applyToChildren"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "hexa_grid-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "hexa_grid-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-tube1--radiusTop"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--radiusBottom"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--height"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--segmentsRadial"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-tube1--segmentsHeight"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-tube1--cap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-tube1--center"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-tube1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--centerx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--centery"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--centerz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-tube1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--directionx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--directiony"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-tube1--directionz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--count"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-copy2--t"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-copy2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--tx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--ty"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--tz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--r"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-copy2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--rx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--ry"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--rz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--s"?: ParamValueSerializedTypeMap["vector3"];
  "hexa_grid-copy2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--sx"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--sy"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--sz"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--scale"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-copy2--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-copy2--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-copy2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-copy2--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-copy2--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "hexa_grid-copy2--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--default"?: ParamValueSerializedTypeMap["folder"];
  "hexa_grid-MAT-meshStandard1--color"?: ParamValueSerializedTypeMap["color"];
  "hexa_grid-MAT-meshStandard1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--colorr"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--colorg"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--colorb"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--opacity"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--textures"?: ParamValueSerializedTypeMap["folder"];
  "hexa_grid-MAT-meshStandard1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--map"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--emissive"?: ParamValueSerializedTypeMap["color"];
  "hexa_grid-MAT-meshStandard1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-MAT-meshStandard1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "hexa_grid-MAT-meshStandard1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--metalness"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "hexa_grid-MAT-meshStandard1--roughness"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "hexa_grid-MAT-meshStandard1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--front"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--blending"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-MAT-meshStandard1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-MAT-meshStandard1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-MAT-meshStandard1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-meshStandard1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-meshStandard1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-MAT-meshStandard1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-MAT-meshStandard1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--front"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--blending"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-MAT-lineBasic1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "hexa_grid-MAT-lineBasic1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-MAT-lineBasic1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "hexa_grid-MAT-lineBasic1--color"?: ParamValueSerializedTypeMap["color"];
  "hexa_grid-MAT-lineBasic1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-lineBasic1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-lineBasic1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-lineBasic1--colorr"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-lineBasic1--colorg"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-lineBasic1--colorb"?: ParamValueSerializedTypeMap["float"];
  "hexa_grid-MAT-lineBasic1--lineWidth"?: ParamValueSerializedTypeMap["float"];
  "grid--transform"?: ParamValueSerializedTypeMap["folder"];
  "grid--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "grid--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "grid--t"?: ParamValueSerializedTypeMap["vector3"];
  "grid--t-tx"?: ParamValueSerializedTypeMap["float"];
  "grid--t-ty"?: ParamValueSerializedTypeMap["float"];
  "grid--t-tz"?: ParamValueSerializedTypeMap["float"];
  "grid--tx"?: ParamValueSerializedTypeMap["float"];
  "grid--ty"?: ParamValueSerializedTypeMap["float"];
  "grid--tz"?: ParamValueSerializedTypeMap["float"];
  "grid--r"?: ParamValueSerializedTypeMap["vector3"];
  "grid--r-rx"?: ParamValueSerializedTypeMap["float"];
  "grid--r-ry"?: ParamValueSerializedTypeMap["float"];
  "grid--r-rz"?: ParamValueSerializedTypeMap["float"];
  "grid--rx"?: ParamValueSerializedTypeMap["float"];
  "grid--ry"?: ParamValueSerializedTypeMap["float"];
  "grid--rz"?: ParamValueSerializedTypeMap["float"];
  "grid--s"?: ParamValueSerializedTypeMap["vector3"];
  "grid--s-sx"?: ParamValueSerializedTypeMap["float"];
  "grid--s-sy"?: ParamValueSerializedTypeMap["float"];
  "grid--s-sz"?: ParamValueSerializedTypeMap["float"];
  "grid--sx"?: ParamValueSerializedTypeMap["float"];
  "grid--sy"?: ParamValueSerializedTypeMap["float"];
  "grid--sz"?: ParamValueSerializedTypeMap["float"];
  "grid--scale"?: ParamValueSerializedTypeMap["float"];
  "grid--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "grid--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "grid--display"?: ParamValueSerializedTypeMap["boolean"];
  "grid--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "grid-planeHelper1--size"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLine"?: ParamValueSerializedTypeMap["color"];
  "grid-planeHelper1--colorCenterLine-colorCenterLiner"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLine-colorCenterLineg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLine-colorCenterLineb"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLiner"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLineg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLineb"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGrid"?: ParamValueSerializedTypeMap["color"];
  "grid-planeHelper1--colorGrid-colorGridr"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGrid-colorGridg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGrid-colorGridb"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGridr"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGridg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGridb"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--transform"?: ParamValueSerializedTypeMap["folder"];
  "orthographicCamera1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "orthographicCamera1--t"?: ParamValueSerializedTypeMap["vector3"];
  "orthographicCamera1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--tx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--ty"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--tz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--r"?: ParamValueSerializedTypeMap["vector3"];
  "orthographicCamera1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--rx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--ry"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--rz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--s"?: ParamValueSerializedTypeMap["vector3"];
  "orthographicCamera1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--sx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--sy"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--sz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--scale"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "orthographicCamera1--camera"?: ParamValueSerializedTypeMap["folder"];
  "orthographicCamera1--controls"?: ParamValueSerializedTypeMap["node_path"];
  "orthographicCamera1--updateFromControlsMode"?: ParamValueSerializedTypeMap["integer"];
  "orthographicCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--display"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--size"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--frameMode"?: ParamValueSerializedTypeMap["integer"];
  "orthographicCamera1--expectedAspectRatio"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "orthographicCamera1--layer"?: ParamValueSerializedTypeMap["integer"];
  "orthographicCamera1--render"?: ParamValueSerializedTypeMap["folder"];
  "orthographicCamera1--setScene"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--scene"?: ParamValueSerializedTypeMap["node_path"];
  "orthographicCamera1--setRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--renderer"?: ParamValueSerializedTypeMap["node_path"];
  "orthographicCamera1--setCSSRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--CSSRenderer"?: ParamValueSerializedTypeMap["node_path"];
  "orthographicCamera1--doPostProcess"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--postProcessNode"?: ParamValueSerializedTypeMap["node_path"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--enableKeys"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--keysMode"?: ParamValueSerializedTypeMap["integer"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--keysPanSpeed"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--keysRotateSpeedVertical"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1-eventsNetwork1-cameraOrbitControls1--keysRotateSpeedHorizontal"?: ParamValueSerializedTypeMap["float"];
  "cubes--transform"?: ParamValueSerializedTypeMap["folder"];
  "cubes--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "cubes--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cubes--t"?: ParamValueSerializedTypeMap["vector3"];
  "cubes--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cubes--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cubes--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cubes--tx"?: ParamValueSerializedTypeMap["float"];
  "cubes--ty"?: ParamValueSerializedTypeMap["float"];
  "cubes--tz"?: ParamValueSerializedTypeMap["float"];
  "cubes--r"?: ParamValueSerializedTypeMap["vector3"];
  "cubes--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cubes--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cubes--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cubes--rx"?: ParamValueSerializedTypeMap["float"];
  "cubes--ry"?: ParamValueSerializedTypeMap["float"];
  "cubes--rz"?: ParamValueSerializedTypeMap["float"];
  "cubes--s"?: ParamValueSerializedTypeMap["vector3"];
  "cubes--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cubes--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cubes--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cubes--sx"?: ParamValueSerializedTypeMap["float"];
  "cubes--sy"?: ParamValueSerializedTypeMap["float"];
  "cubes--sz"?: ParamValueSerializedTypeMap["float"];
  "cubes--scale"?: ParamValueSerializedTypeMap["float"];
  "cubes--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cubes--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "cubes--display"?: ParamValueSerializedTypeMap["boolean"];
  "cubes--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribCreate1--group"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribCreate1--class"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribCreate1--type"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribCreate1--name"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribCreate1--size"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribCreate1--value1"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value2"?: ParamValueSerializedTypeMap["vector2"];
  "cubes-attribCreate1--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value2x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value2y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value3"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-attribCreate1--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value3x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value3y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value3z"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value4"?: ParamValueSerializedTypeMap["vector4"];
  "cubes-attribCreate1--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value4x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value4y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value4z"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--value4w"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate1--string"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribDelete1--class"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribDelete1--name"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribPromote1--classFrom"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribPromote1--classTo"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribPromote1--mode"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribPromote1--name"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribRename1--class"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribRename1--oldName"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribRename1--newName"?: ParamValueSerializedTypeMap["string"];
  "cubes-box1--size"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-box1--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--sizesx"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--sizesy"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--sizesz"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--divisions"?: ParamValueSerializedTypeMap["integer"];
  "cubes-box1--center"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-box1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--centerx"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--centery"?: ParamValueSerializedTypeMap["float"];
  "cubes-box1--centerz"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--count"?: ParamValueSerializedTypeMap["integer"];
  "cubes-copy1--t"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-copy1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--tx"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--ty"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--tz"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--r"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-copy1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--rx"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--ry"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--rz"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--s"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-copy1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--sx"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--sy"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--sz"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--scale"?: ParamValueSerializedTypeMap["float"];
  "cubes-copy1--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-copy1--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "cubes-copy1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "cubes-copy1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-copy1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "cubes-copy1--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-delete1--class"?: ParamValueSerializedTypeMap["integer"];
  "cubes-delete1--invert"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-delete1--byObjectType"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-delete1--objectType"?: ParamValueSerializedTypeMap["integer"];
  "cubes-delete1--byExpression"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-delete1--expression"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-delete1--byAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-delete1--attribType"?: ParamValueSerializedTypeMap["integer"];
  "cubes-delete1--attribName"?: ParamValueSerializedTypeMap["string"];
  "cubes-delete1--attribSize"?: ParamValueSerializedTypeMap["integer"];
  "cubes-delete1--attribComparisonOperator"?: ParamValueSerializedTypeMap["integer"];
  "cubes-delete1--attribValue1"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue2"?: ParamValueSerializedTypeMap["vector2"];
  "cubes-delete1--attribValue2-attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue2-attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue3"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-delete1--attribValue3-attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue3-attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue3-attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue4"?: ParamValueSerializedTypeMap["vector4"];
  "cubes-delete1--attribValue4-attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue4-attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue4-attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue4-attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--attribString"?: ParamValueSerializedTypeMap["string"];
  "cubes-delete1--byBbox"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-delete1--bboxSize"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-delete1--bboxSize-bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxSize-bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxSize-bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxCenter"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-delete1--bboxCenter-bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxCenter-bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxCenter-bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "cubes-delete1--byBoundingObject"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-delete1--keepPoints"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-fuse1--dist"?: ParamValueSerializedTypeMap["float"];
  "cubes-material1--group"?: ParamValueSerializedTypeMap["string"];
  "cubes-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "cubes-material1--applyToChildren"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "cubes-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "cubes-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cubes-palette1--paletteName"?: ParamValueSerializedTypeMap["string"];
  "cubes-palette1--pickNext"?: ParamValueSerializedTypeMap["button"];
  "cubes-palette1--pickPrevious"?: ParamValueSerializedTypeMap["button"];
  "cubes-palette1--pickRandom"?: ParamValueSerializedTypeMap["button"];
  "cubes-palette1--colorsCount"?: ParamValueSerializedTypeMap["integer"];
  "cubes-palette1--color1"?: ParamValueSerializedTypeMap["color"];
  "cubes-palette1--color1-color1r"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color1-color1g"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color1-color1b"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color1r"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color1g"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color1b"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color2"?: ParamValueSerializedTypeMap["color"];
  "cubes-palette1--color2-color2r"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color2-color2g"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color2-color2b"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color2r"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color2g"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color2b"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color3"?: ParamValueSerializedTypeMap["color"];
  "cubes-palette1--color3-color3r"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color3-color3g"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color3-color3b"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color3r"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color3g"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color3b"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color4"?: ParamValueSerializedTypeMap["color"];
  "cubes-palette1--color4-color4r"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color4-color4g"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color4-color4b"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color4r"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color4g"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color4b"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color5"?: ParamValueSerializedTypeMap["color"];
  "cubes-palette1--color5-color5r"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color5-color5g"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color5-color5b"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color5r"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color5g"?: ParamValueSerializedTypeMap["float"];
  "cubes-palette1--color5b"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--size"?: ParamValueSerializedTypeMap["vector2"];
  "cubes-plane1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--sizex"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--sizey"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-plane1--stepSize"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--segments"?: ParamValueSerializedTypeMap["vector2"];
  "cubes-plane1--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-plane1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--directionx"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--directiony"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--directionz"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--center"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-plane1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--centerx"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--centery"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--centerz"?: ParamValueSerializedTypeMap["float"];
  "cubes-plane1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-point1--updateX"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-point1--x"?: ParamValueSerializedTypeMap["float"];
  "cubes-point1--updateY"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-point1--y"?: ParamValueSerializedTypeMap["float"];
  "cubes-point1--updateZ"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-point1--z"?: ParamValueSerializedTypeMap["float"];
  "cubes-point1--updateNormals"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-restAttributes1--tposition"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-restAttributes1--position"?: ParamValueSerializedTypeMap["string"];
  "cubes-restAttributes1--restP"?: ParamValueSerializedTypeMap["string"];
  "cubes-restAttributes1--tnormal"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-restAttributes1--normal"?: ParamValueSerializedTypeMap["string"];
  "cubes-restAttributes1--restN"?: ParamValueSerializedTypeMap["string"];
  "cubes-scatter1--pointsCount"?: ParamValueSerializedTypeMap["integer"];
  "cubes-scatter1--seed"?: ParamValueSerializedTypeMap["integer"];
  "cubes-scatter1--useWeightAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-scatter1--weightAttribute"?: ParamValueSerializedTypeMap["string"];
  "cubes-scatter1--transferAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-scatter1--attributesToTransfer"?: ParamValueSerializedTypeMap["string"];
  "cubes-scatter1--addIdAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-scatter1--addIdnAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "cubes-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "cubes-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "cubes-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "cubes-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cubes-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "cubes-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "cubes-sort1--mode"?: ParamValueSerializedTypeMap["integer"];
  "cubes-sort1--targetType"?: ParamValueSerializedTypeMap["integer"];
  "cubes-sort1--seed"?: ParamValueSerializedTypeMap["integer"];
  "cubes-sort1--axis"?: ParamValueSerializedTypeMap["integer"];
  "cubes-sort1--invert"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-audioNotes1--class"?: ParamValueSerializedTypeMap["integer"];
  "cubes-audioNotes1--name"?: ParamValueSerializedTypeMap["string"];
  "cubes-audioNotes1--toctave"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-audioNotes1--octaveName"?: ParamValueSerializedTypeMap["string"];
  "cubes-audioNotes1--startOctave"?: ParamValueSerializedTypeMap["integer"];
  "cubes-audioNotes1--endOctave"?: ParamValueSerializedTypeMap["integer"];
  "cubes-audioNotes1--outOfRangeBehavior"?: ParamValueSerializedTypeMap["integer"];
  "cubes-noise1--amplitude"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--tamplitudeAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-noise1--amplitudeAttrib"?: ParamValueSerializedTypeMap["string"];
  "cubes-noise1--freq"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-noise1--freq-freqx"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--freq-freqy"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--freq-freqz"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--freqx"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--freqy"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--freqz"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--offset"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-noise1--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--offset-offsetz"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--offsetx"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--offsety"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--offsetz"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--octaves"?: ParamValueSerializedTypeMap["integer"];
  "cubes-noise1--ampAttenuation"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--freqIncrease"?: ParamValueSerializedTypeMap["float"];
  "cubes-noise1--seed"?: ParamValueSerializedTypeMap["integer"];
  "cubes-noise1--useNormals"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-noise1--attribName"?: ParamValueSerializedTypeMap["string"];
  "cubes-noise1--useRestAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-noise1--restP"?: ParamValueSerializedTypeMap["string"];
  "cubes-noise1--restN"?: ParamValueSerializedTypeMap["string"];
  "cubes-noise1--operation"?: ParamValueSerializedTypeMap["integer"];
  "cubes-noise1--computeNormals"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-attribCreate2--group"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribCreate2--class"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribCreate2--type"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribCreate2--name"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribCreate2--size"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribCreate2--value1"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value2"?: ParamValueSerializedTypeMap["vector2"];
  "cubes-attribCreate2--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value2x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value2y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value3"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-attribCreate2--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value3x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value3y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value3z"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value4"?: ParamValueSerializedTypeMap["vector4"];
  "cubes-attribCreate2--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value4x"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value4y"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value4z"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--value4w"?: ParamValueSerializedTypeMap["float"];
  "cubes-attribCreate2--string"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribCopy1--name"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribCopy1--tnewName"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-attribCopy1--newName"?: ParamValueSerializedTypeMap["string"];
  "cubes-attribCopy1--srcOffset"?: ParamValueSerializedTypeMap["integer"];
  "cubes-attribCopy1--destOffset"?: ParamValueSerializedTypeMap["integer"];
  "cubes-audioNotes2--class"?: ParamValueSerializedTypeMap["integer"];
  "cubes-audioNotes2--name"?: ParamValueSerializedTypeMap["string"];
  "cubes-audioNotes2--toctave"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-audioNotes2--octaveName"?: ParamValueSerializedTypeMap["string"];
  "cubes-audioNotes2--startOctave"?: ParamValueSerializedTypeMap["integer"];
  "cubes-audioNotes2--endOctave"?: ParamValueSerializedTypeMap["integer"];
  "cubes-audioNotes2--outOfRangeBehavior"?: ParamValueSerializedTypeMap["integer"];
  "cubes-MAT-meshLambertBuilder1--default"?: ParamValueSerializedTypeMap["folder"];
  "cubes-MAT-meshLambertBuilder1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--opacity"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--textures"?: ParamValueSerializedTypeMap["folder"];
  "cubes-MAT-meshLambertBuilder1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--map"?: ParamValueSerializedTypeMap["node_path"];
  "cubes-MAT-meshLambertBuilder1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "cubes-MAT-meshLambertBuilder1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "cubes-MAT-meshLambertBuilder1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--emissive"?: ParamValueSerializedTypeMap["color"];
  "cubes-MAT-meshLambertBuilder1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "cubes-MAT-meshLambertBuilder1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "cubes-MAT-meshLambertBuilder1--combine"?: ParamValueSerializedTypeMap["integer"];
  "cubes-MAT-meshLambertBuilder1--reflectivity"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--refractionRatio"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "cubes-MAT-meshLambertBuilder1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "cubes-MAT-meshLambertBuilder1--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "cubes-MAT-meshLambertBuilder1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--front"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--blending"?: ParamValueSerializedTypeMap["integer"];
  "cubes-MAT-meshLambertBuilder1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "cubes-MAT-meshLambertBuilder1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "cubes-MAT-meshLambertBuilder1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-MAT-meshLambertBuilder1--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "cubes-MAT-meshLambertBuilder1--blendShape"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1--useThisNode"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-actor1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cubes-actor1-onObjectHover1--element"?: ParamValueSerializedTypeMap["integer"];
  "cubes-actor1-onObjectHover1--traverseChildren"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-actor1-onObjectHover1--pointsThreshold"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-onObjectHover1--lineThreshold"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-twoWaySwitch1--condition"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-actor1-twoWaySwitch1--ifTrue"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-twoWaySwitch1--ifFalse"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectScale1--scale"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-actor1-setObjectScale1--scale-scalex"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectScale1--scale-scaley"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectScale1--scale-scalez"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectScale1--scalex"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectScale1--scaley"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectScale1--scalez"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectScale1--mult"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectScale1--lerp"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectScale1--updateMatrix"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-actor1-floatToVec3_1--x"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-floatToVec3_1--y"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-floatToVec3_1--z"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-playInstrumentNote1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cubes-actor1-playInstrumentNote1--note"?: ParamValueSerializedTypeMap["string"];
  "cubes-actor1-playInstrumentNote1--duration"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-triggerTwoWaySwitch1--condition"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-actor1-getObjectAttribute1--attribName"?: ParamValueSerializedTypeMap["string"];
  "cubes-actor1-getObjectAttribute1--type"?: ParamValueSerializedTypeMap["integer"];
  "cubes-actor1-constant_posBlend--type"?: ParamValueSerializedTypeMap["integer"];
  "cubes-actor1-constant_posBlend--boolean"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-actor1-constant_posBlend--color"?: ParamValueSerializedTypeMap["color"];
  "cubes-actor1-constant_posBlend--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--colorr"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--colorg"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--colorb"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--float"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--integer"?: ParamValueSerializedTypeMap["integer"];
  "cubes-actor1-constant_posBlend--string"?: ParamValueSerializedTypeMap["string"];
  "cubes-actor1-constant_posBlend--vector2"?: ParamValueSerializedTypeMap["vector2"];
  "cubes-actor1-constant_posBlend--vector2-vector2x"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector2-vector2y"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector2x"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector2y"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector3"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-actor1-constant_posBlend--vector3-vector3x"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector3-vector3y"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector3-vector3z"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector3x"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector3y"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector3z"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector4"?: ParamValueSerializedTypeMap["vector4"];
  "cubes-actor1-constant_posBlend--vector4-vector4x"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector4-vector4y"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector4-vector4z"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector4-vector4w"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector4x"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector4y"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector4z"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-constant_posBlend--vector4w"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-mix1--value0"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-mix1--value1"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-mix1--blend"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-getObjectAttribute2--attribName"?: ParamValueSerializedTypeMap["string"];
  "cubes-actor1-getObjectAttribute2--type"?: ParamValueSerializedTypeMap["integer"];
  "cubes-actor1-setObjectPosition1--position"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-actor1-setObjectPosition1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectPosition1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectPosition1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectPosition1--positionx"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectPosition1--positiony"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectPosition1--positionz"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectPosition1--lerp"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-setObjectPosition1--updateMatrix"?: ParamValueSerializedTypeMap["boolean"];
  "cubes-actor1-floatToVec3_2--x"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-floatToVec3_2--y"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-floatToVec3_2--z"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-vec3ToFloat1--vec3"?: ParamValueSerializedTypeMap["vector3"];
  "cubes-actor1-vec3ToFloat1--vec3-vec3x"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-vec3ToFloat1--vec3-vec3y"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-vec3ToFloat1--vec3-vec3z"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-vec3ToFloat1--vec3x"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-vec3ToFloat1--vec3y"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-vec3ToFloat1--vec3z"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-getObjectAttribute3--attribName"?: ParamValueSerializedTypeMap["string"];
  "cubes-actor1-getObjectAttribute3--type"?: ParamValueSerializedTypeMap["integer"];
  "cubes-actor1-subtract1--sub0"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-subtract1--sub1"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-clamp1--value"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-clamp1--min"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-clamp1--max"?: ParamValueSerializedTypeMap["float"];
  "cubes-actor1-getObjectAttribute4--attribName"?: ParamValueSerializedTypeMap["string"];
  "cubes-actor1-getObjectAttribute4--type"?: ParamValueSerializedTypeMap["integer"];
  "cubes-actor1-switch1--index"?: ParamValueSerializedTypeMap["integer"];
  "cubes-actor1-switch1--in0"?: ParamValueSerializedTypeMap["string"];
  "cubes-actor1-switch1--in1"?: ParamValueSerializedTypeMap["string"];
  "cubes-actor1-switch1--in2"?: ParamValueSerializedTypeMap["string"];
  "positionalAudio1--transform"?: ParamValueSerializedTypeMap["folder"];
  "positionalAudio1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "positionalAudio1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "positionalAudio1--t"?: ParamValueSerializedTypeMap["vector3"];
  "positionalAudio1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--tx"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--ty"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--tz"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--r"?: ParamValueSerializedTypeMap["vector3"];
  "positionalAudio1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--rx"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--ry"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--rz"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--s"?: ParamValueSerializedTypeMap["vector3"];
  "positionalAudio1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--sx"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--sy"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--sz"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--scale"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "positionalAudio1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "positionalAudio1--audio"?: ParamValueSerializedTypeMap["folder"];
  "positionalAudio1--audioNode"?: ParamValueSerializedTypeMap["node_path"];
  "positionalAudio1--refDistance"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--rolloffFactor"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--distanceModel"?: ParamValueSerializedTypeMap["integer"];
  "positionalAudio1--coneInnerAngle"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--coneOuterAngle"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--coneOuterGain"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1--listenerTransformAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "positionalAudio1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "positionalAudio1--helperSize"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-envelope1--attack"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-envelope1--decay"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-envelope1--sustain"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-envelope1--release"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-playInstrument1--note"?: ParamValueSerializedTypeMap["string"];
  "positionalAudio1-playInstrument1--duration"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-playInstrument1--showNotes"?: ParamValueSerializedTypeMap["boolean"];
  "positionalAudio1-playInstrument1--showKeys"?: ParamValueSerializedTypeMap["boolean"];
  "positionalAudio1-playInstrument1--startOctave"?: ParamValueSerializedTypeMap["integer"];
  "positionalAudio1-playInstrument1--endOctave"?: ParamValueSerializedTypeMap["integer"];
  "positionalAudio1-playInstrument1--updateNoteFromInstrument"?: ParamValueSerializedTypeMap["boolean"];
  "positionalAudio1-sampler1--urlsMap"?: ParamValueSerializedTypeMap["string"];
  "positionalAudio1-sampler1--baseUrl"?: ParamValueSerializedTypeMap["string"];
  "positionalAudio1-sampler1--extension"?: ParamValueSerializedTypeMap["string"];
  "positionalAudio1-envelope2--attack"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-envelope2--decay"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-envelope2--sustain"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-envelope2--release"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-reverb1--decay"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-reverb1--preDelay"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-distortion1--distortion"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-distortion1--oversample"?: ParamValueSerializedTypeMap["integer"];
  "positionalAudio1-phaser1--frequency"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-phaser1--baseFrequency"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-phaser1--octaves"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-phaser1--stages"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-phaser1--Q"?: ParamValueSerializedTypeMap["float"];
  "positionalAudio1-switch_filterSound--input"?: ParamValueSerializedTypeMap["integer"];
}
